

8月8日〜8月9日 (今日の内容も若干入ってるけど)

２０h (TTL １１６５h)

 【実施内容】
- LINE通知　　おそらく終了！！！！！
- HR(面接の極意、自己PR文)


***

【学習を通して】

LINE通知、、、、、、本当に今までで一番大変だった。。。
コードリーディングもう一回やって処理の流れを完全に理解して文字に起こすまでしたいですが、認証関係はかなり難しい概念ですね。。
一応手動でのjob実行は成功していますが、明日起きて自動で通知が来たらjobの成功なので楽しみですね。確認できたら終わりです！！
cron jobは毎日指定した時間に実行されているようなので、該当するものがあれば実行してくれるはずだ！
**[何に苦労したか？]**
- なんといってもユーザーとLINEユーザーの紐付け。やり方はいろいろあるので正解がなくどうすればいいのか、、、と悩みました。記事も全然ないし、、、
先日載せたhidden_fieldのやり方は結局上手くいかず、処理の流れもイマイチよく分からないのでやめました。
- ログインしているユーザーの情報と繋げればいいけど、どうやって？？というところが難しく、GPTと壁打ちしたりしました。
- だいちさんのやり方を教えてくださり、そこから選択肢が広がって道が開けたので本当にありがとうございました！
- 結局LINE連携をアプリにログインしてからしてもらい、current_userと紐付けするということにしました（オプションで連携時に公式アカウントが追加できるとドキュメントに記載あり！）
- LINEログインはアプリのSNS認証ログイン機能として使っているわけではなく、line_user_idを取得する目的で導入しました
- ngrok(エングロック)を使わないとローカルではできないと散々調べていたはずが、前回の投稿のようにずっとローカルでできない！４０４エラーの原因追及してました。
- LINEに関してはデプロイしてログ見て都度エラー解消する方が早いです！何回もブランチ切ったけど、、、
- Messaging APIチャネルとLINEログインチャネルは別物ですので、それぞれチャネルの作成が必要です
- 私は結局Active Jobとrenderのcron jobで定期実行する選択を選びました！
- ActionController::Redirecting::UnsafeRedirectErrorは外部ホストへのリダイレクト時のエラーですが、Googleでは起きなかったので記事に書いてます
- 自動配信される通知を確認すること以外はpathまでに終了できたので良かった✨
- パスワードリセットの実装迷いますが、色々な選択肢を残しておくのもいいかなと思ったのと、他の大きな実装がもうないのでやろうと思っています
```
全体の流れ

1. ユーザーが`link`アクションを介してLINEログインを開始。
2. ユーザーはLINEの認証ページにリダイレクトされ、認証が行われる。
3. 認証が成功すると、LINEは指定された`callback`URL（アプリに戻ってくる）にリダイレクト。
4. `callback`アクションが呼び出され、LINEからの認証コードを使ってアクセストークンを取得し、そのアクセストークンを使ってユーザーのLINEユーザーIDを取得。
5. そのLINEユーザーIDを現在のユーザーに紐付けて、処理が完了。
```





***

【一言】
- ここ数日プライベートなこと書く余裕がなかったのですが、先日は亀ちゃんと浅草ぶらりして美味しい海鮮と濃い抹茶ラテ&アイスを食べソラマチの方行きました〜！
いい気分転換になったしとっても楽しかった！😊🐟（明日も会えるね？明後日もか❤️笑）
- 爆音かけながら勉強すると割と気が紛れて良かったです！





***


【今日のTo Do】
-　転職チャンネル（校長が予習に見てって言ってた動画）　
-　Zenn記事執筆
-　paiza
- ruby本
- LINE通知（一旦終了、通知待ち）

お疲れ様でした！！！！
