
11/23
【実施内容】
- [x]  ドットインストール  ****[Ruby入門 制御構造編](https://dotinstall.com/lessons/basic_ruby_controls)
- [x]  ドットインストール **Ruby入門 メソッド編**
- [x]  web技術の基本 ch5


***

【学習内容✍】
- やっとrubyに入ったのでチェリー本と合わせて復習してます。もっと本読む比重増やそうかな。
```
- for文

```jsx
for i in 1..9
 puts 4 * i
end
```

1~9の間iに代入して4をかけて出力する

- while は for と違って、繰り返す回数がよくわからない時に使われる
- break→ 途中で反復を終了させる

```jsx
money = 100
for year in 1..30
  money *= 1.05
  if money > 300
    break
  end
  puts "Year #{year}: #{money}"
end

```

⭐️if を最後に書く方法を使えば、もう少し短く書くことができる！

⭐️next 　money が 200 より小さい時は、これ以降の処理、つまりこの結果を表示する処理をスキップして、次の反復処理に移ってくれる
money = 100
for year in 1..30
  money *= 1.05
  # if money > 300
  #   break
  # end
  break if money > 300
  next if money <200
  puts "Year #{year}: #{money}"
end

ポイント❣️

break は反復処理全体を終了させるための命令
next は反復処理の途中で実行すると、それ以降の処理をスキップして、次の反復処理に移るための命令


- false になるのは、真偽値の false と何もないを意味する特殊な値である nil のみで、一方 true になるのは true やただの数値、文字列といった、それ以外のすべて
- 0 や空文字といった false っぽい値でも、Ruby では true として評価される
- メソッドは定義された時点では何も実行しないが、メソッドが呼び出されるたびにメソッド定義内に処理が移って、返り値がメソッドを呼び出した箇所に返って置き換わるイメージ
- return を使って条件に合わないものを早めに振り落とすテクニックを「早期リターン」と呼ぶ。

```



***

【一言🗣️】

***
【明日のTo Do】
- [ ]  ドットインストール　**Ruby入門 データ構造編 6まで**
- [ ]  ドットインストール  ****[Ruby入門 制御構造編](https://dotinstall.com/lessons/basic_ruby_controls)　残り２つ
- [ ]  **SQL 第2版: ゼロからはじめるデータベース操作 ch3　輪読会10am**
- [ ]  🍒本 復習
明日もゆるゆる〜

お疲れ様でした！！！！
